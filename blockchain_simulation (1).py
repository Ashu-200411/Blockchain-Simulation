# -*- coding: utf-8 -*-
"""BLOCKCHAIN SIMULATION.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mAXGqgyI0BflS3rPXRT9-4lLvOpVtCdp
"""

import hashlib
import time

class Block:
    def __init__(self, index, data, previous_hash):
        self.index = index
        self.timestamp = time.time()
        self.data = data
        self.previous_hash = previous_hash
        self.nonce = 0
        self.hash = self.calculate_hash()

    def calculate_hash(self):
        value = str(self.index) + str(self.timestamp) + self.data + self.previous_hash + str(self.nonce)
        return hashlib.sha256(value.encode()).hexdigest()

    def mine_block(self, difficulty):
        print(f"Mining block {self.index} with difficulty {difficulty}...")
        start_time = time.time()
        while self.hash[:difficulty] != '0' * difficulty:
            self.nonce += 1
            self.hash = self.calculate_hash()
        end_time = time.time()
        print(f"Block {self.index} mined successfully.")
        print(f"Hash: {self.hash}")
        print(f"Nonce attempts: {self.nonce}")
        print(f"Time taken: {end_time - start_time:.2f} seconds\n")

# Create and link 3 blocks
difficulty = 4
genesis_block = Block(0, "Genesis Block", "0")
genesis_block.mine_block(difficulty)

second_block = Block(1, "Second Block Data", genesis_block.hash)
second_block.mine_block(difficulty)

third_block = Block(2, "Third Block Data", second_block.hash)
third_block.mine_block(difficulty)